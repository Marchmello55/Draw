from aiogram import Router, Bot, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from config_data.config import load_config, Config
from database import requests as rq
from filter.access_filter import HasAccessFilter
from keyboards import buttons as bt

import logging
import random, asyncio

router = Router()
config: Config = load_config()


@router.message(Command("draw"), HasAccessFilter("ADMIN"))
async def draw(message: Message, bot: Bot, state: FSMContext):
    logging.info("draw")

    data = await rq.get_code_to_draw()
    number = await get_random_number_async(min_val=0, max_val=len(data)-1)
    user_data = await rq.get_user_by_id((data[number]).tg_id)
    if user_data.username:
        user ="@" + user_data.username
    else:
        user = f"<a href='tg://user?id={data[number].tg_id}'>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å</a>"
    await bot.send_message(chat_id=(data[number]).tg_id,
                           text=f"""üéä{user}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –í–∞—Å! üéä

–í–∞—à–∞ —É–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å —Å–µ–≥–æ–¥–Ω—èüí´ 

–ñ–¥–µ–º –í–∞—Å –≤ –Ω–∞—à–µ–π —á–∞–π–Ω–æ–π Met Tea –Ω–∞ 1905 –≥–æ–¥–∞ –¥–ª—è –≤—Ä—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞üì± –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –í–∞—Å –≤—Ä–µ–º—èüôå""",
                           parse_mode="HTML")
    await message.answer(f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {user}",
                         parse_mode="HTML")
    users_all = await rq.get_all_users()
    for user_ in users_all:
        try:
            await bot.send_message(chat_id=user_[0],
                                   text=f"""  üéâ –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞üéâ 

    üçÄ–°—á–∞—Å—Ç–ª–∏–≤—ã–º —Å—Ç–∞–ª –±–∏–ª–µ—Ç —Å –∫–æ–¥–æ–º {data[number].code}üçÄ

    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è {user}, –ø–æ–π–º–∞–≤—à–µ–≥–æ —É–¥–∞—á—É –∑–∞ —Ö–≤–æ—Å—Çüí´ü¶ä

    –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –Ω–∞—à–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ‚ù§Ô∏è 

    –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ-–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10% –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∫—É–ø–∫—É –≤ —á–∞–π–Ω–æ–π Met Tea  –Ω–∞ 1905 –≥–æ–¥–∞ü´∂""",
                                   reply_markup=await bt.get_bonus())
        except Exception as e:
            logging.info(f'{user_[0]} - {e}')
    await message.delete()


async def get_random_number_async(min_val: int, max_val: int) -> int:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
    """
    return await asyncio.to_thread(random.randint, min_val, max_val)


@router.callback_query(F.data == 'get_promo')
async def get_promo(callback: CallbackQuery):
    await callback.message.edit_text(text='–í–∞—à –ø—Ä–æ–º–æ-–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10% –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∫—É–ø–∫—É'
                                          ' –≤ —á–∞–π–Ω–æ–π Met Tea  –Ω–∞ 1905 –≥–æ–¥–∞ü´∂\n\n'
                                          '<b>Met_Tea_10</b>')
